{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Board.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Rows from './Rows';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  let round = 0;\n\n  function fillSquare(sqId) {\n    _s();\n\n    const [boardFull, setBoard] = useState(false);\n    const player = round % 2 === 0 ? 'X' : 'O';\n    board[sqId] = player;\n    console.log(`Ronda: ${round}, jugador ${player}, ha colocado en ${sqId}`);\n    round++;\n    setBoard(board);\n    console.log(board);\n\n    if (!board.includes(null)) {\n      setBoard(true);\n    }\n  }\n\n  _s(fillSquare, \"uMXsn+ys+OfVyCeJS9RlnyIsm78=\");\n\n  useEffect(() => {\n    console.log('hola soy el useEffect y estoy siendo ejecutado');\n    const solutions = [[0, 1, 2], [0, 4, 8], [0, 3, 6], [1, 4, 7], [3, 4, 5], [6, 7, 8], [2, 5, 8], [2, 4, 6]];\n\n    for (let i = 0; i < solutions.length; i++) {\n      const [a, b, c] = solutions[i];\n\n      if (board[a] && board[a] === board[b] && board[b] === board[c]) {\n        const ganador = board[a];\n        return `Jugador ${ganador}, ¡has ganado!`;\n      }\n    }\n  });\n\n  if (!board.includes(null)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tie\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HA SIDO UN EMPATE!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    console.log('else');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: /*#__PURE__*/_jsxDEV(Rows, {\n          fillSquare: fillSquare,\n          board: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s2(Board, \"z8qvb+u7oSajp3qteqGhXOPfdf8=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Board.jsx"],"names":["React","useEffect","useState","Rows","Board","board","setBoard","Array","fill","round","fillSquare","sqId","boardFull","player","console","log","includes","solutions","i","length","a","b","c","ganador"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Rows from './Rows';\n\nexport default function Board() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  let round = 0;\n\n  function fillSquare(sqId) {\n    const [boardFull, setBoard] = useState(false);\n    const player = round % 2 === 0 ? 'X' : 'O';\n    board[sqId] = player;\n    console.log(`Ronda: ${round}, jugador ${player}, ha colocado en ${sqId}`);\n    round++;\n    setBoard(board);\n    console.log(board);\n    if (!board.includes(null)) {\n      setBoard(true);\n    }\n  }\n  useEffect(() => {\n    console.log('hola soy el useEffect y estoy siendo ejecutado');\n    const solutions = [\n      [0, 1, 2],\n      [0, 4, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [3, 4, 5],\n      [6, 7, 8],\n      [2, 5, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < solutions.length; i++) {\n      const [a, b, c] = solutions[i];\n      if (board[a] && board[a] === board[b] && board[b] === board[c]) {\n        const ganador = board[a];\n        return `Jugador ${ganador}, ¡has ganado!`;\n      }\n    }\n  });\n\n  if (!board.includes(null)) {\n    return (\n      <div className='tie'>\n        <h1>HA SIDO UN EMPATE!</h1>\n      </div>\n    );\n  } else {\n    console.log('else');\n    return (\n      <>\n        <div className='board'>\n          <Rows fillSquare={fillSquare} board={board} />\n        </div>\n        <div className='score'></div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}