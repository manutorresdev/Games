{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Rows from './Rows';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  let round = 0;\n\n  function fillSquare(sqId) {\n    const player = round % 2 === 0 ? 'X' : 'O';\n    board[sqId] = player;\n    console.log(`Ronda: ${round}, jugador ${player}, ha colocado en ${sqId}`);\n    round++;\n    setBoard(board);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(Rows, {\n        fillSquare: fillSquare,\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"1K3Vu9OcSUctNj4ePzTiMTGoH/o=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Board.jsx"],"names":["React","useState","Rows","Board","board","setBoard","Array","fill","round","fillSquare","sqId","player","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,UAAMC,MAAM,GAAGH,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,GAAlB,GAAwB,GAAvC;AACAJ,IAAAA,KAAK,CAACM,IAAD,CAAL,GAAcC,MAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASL,KAAM,aAAYG,MAAO,oBAAmBD,IAAK,EAAvE;AACAF,IAAAA,KAAK;AACLH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAEK,UAAlB;AAA8B,QAAA,KAAK,EAAEL;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GAlBuBD,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react';\nimport Rows from './Rows';\n\nexport default function Board() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  let round = 0;\n  function fillSquare(sqId) {\n    const player = round % 2 === 0 ? 'X' : 'O';\n    board[sqId] = player;\n    console.log(`Ronda: ${round}, jugador ${player}, ha colocado en ${sqId}`);\n    round++;\n    setBoard(board);\n  }\n  return (\n    <>\n      <div className='board'>\n        <Rows fillSquare={fillSquare} board={board} />\n      </div>\n      <div className='score'></div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}