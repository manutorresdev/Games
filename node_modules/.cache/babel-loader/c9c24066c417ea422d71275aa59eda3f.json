{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Rows.jsx\";\nimport React from 'react';\nimport Squares from './Squares';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rows({\n  fillSquare,\n  board,\n  game,\n  winners,\n  active\n}) {\n  //   winners = [a,b,c]\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"b-row first-row\",\n      children: game.finished ? /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"0\",\n        fillSquare: fillSquare,\n        board: true,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"0\",\n        fillSquare: fillSquare,\n        board: true,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"b-row second-row\",\n      children: game.finished ? /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"3\",\n        fillSquare: fillSquare,\n        board: board,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"3\",\n        fillSquare: fillSquare,\n        board: board,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"b-row third-row\",\n      children: game.finished ? /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"3\",\n        fillSquare: fillSquare,\n        board: board,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Squares, {\n        sPos: \"3\",\n        fillSquare: fillSquare,\n        board: board,\n        game: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Rows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rows\");","map":{"version":3,"sources":["/home/manu/Documents/development/React/tictactoe/tictactoe/src/components/Rows.jsx"],"names":["React","Squares","Rows","fillSquare","board","game","winners","active","finished"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA;AAApC,CAAd,EAA4D;AACzE;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGF,IAAI,CAACG,QAAL,gBACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAEL,UAA9B;AAA0C,QAAA,KAAK,MAA/C;AAAgD,QAAA,IAAI;AAApD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,MAA/C;AAAgD,QAAA,IAAI;AAApD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGE,IAAI,CAACG,QAAL,gBACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAEL,UAA9B;AAA0C,QAAA,KAAK,EAAEC,KAAjD;AAAwD,QAAA,IAAI;AAA5D;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAED,UAA9B;AAA0C,QAAA,KAAK,EAAEC,KAAjD;AAAwD,QAAA,IAAI;AAA5D;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGC,IAAI,CAACG,QAAL,gBACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAEL,UAA9B;AAA0C,QAAA,KAAK,EAAEC,KAAjD;AAAwD,QAAA,IAAI;AAA5D;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,UAAU,EAAED,UAA9B;AAA0C,QAAA,KAAK,EAAEC,KAAjD;AAAwD,QAAA,IAAI;AAA5D;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAyBD;KA3BuBF,I","sourcesContent":["import React from 'react';\nimport Squares from './Squares';\n\nexport default function Rows({ fillSquare, board, game, winners, active }) {\n  //   winners = [a,b,c]\n  return (\n    <>\n      <div className='b-row first-row'>\n        {game.finished ? (\n          <Squares sPos='0' fillSquare={fillSquare} board game />\n        ) : (\n          <Squares sPos='0' fillSquare={fillSquare} board game />\n        )}\n      </div>\n      <div className='b-row second-row'>\n        {game.finished ? (\n          <Squares sPos='3' fillSquare={fillSquare} board={board} game />\n        ) : (\n          <Squares sPos='3' fillSquare={fillSquare} board={board} game />\n        )}\n      </div>\n      <div className='b-row third-row'>\n        {game.finished ? (\n          <Squares sPos='3' fillSquare={fillSquare} board={board} game />\n        ) : (\n          <Squares sPos='3' fillSquare={fillSquare} board={board} game />\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}